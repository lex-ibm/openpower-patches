# Disable additional URLs that are not caught by the "trk" scheme

Index: chromium-128.0.6613.137/rlz/lib/financial_ping.cc
===================================================================
--- chromium-128.0.6613.137.orig/rlz/lib/financial_ping.cc
+++ chromium-128.0.6613.137/rlz/lib/financial_ping.cc
@@ -311,7 +311,7 @@ FinancialPing::PingResponse FinancialPin
   response->clear();
 
   std::string url =
-      base::StringPrintf("https://%s%s", kFinancialServer, request);
+      base::StringPrintf("https://%s%s", "about:blank", request);
 
   // Use a waitable event to cause this function to block, to match the
   // wininet implementation.
Index: chromium-128.0.6613.137/rlz/lib/lib_values.cc
===================================================================
--- chromium-128.0.6613.137.orig/rlz/lib/lib_values.cc
+++ chromium-128.0.6613.137/rlz/lib/lib_values.cc
@@ -40,7 +40,6 @@ const char kSetDccResponseVariable[] = "
 //
 
 const char kFinancialPingPath[] = "/tools/pso/ping";
-const char kFinancialServer[]   = "trk:443:clients1.google.com"; /* not using URLRequest! catch with cache.ir */
 const int kFinancialPort = 443;
 
 // Ping times in 100-nanosecond intervals.
Index: chromium-128.0.6613.137/rlz/lib/lib_values.h
===================================================================
--- chromium-128.0.6613.137.orig/rlz/lib/lib_values.h
+++ chromium-128.0.6613.137/rlz/lib/lib_values.h
@@ -72,7 +72,6 @@ extern const char kSetDccResponseVariabl
 //
 
 extern const char kFinancialPingPath[];
-extern const char kFinancialServer[];
 
 extern const int kFinancialPort;
 
