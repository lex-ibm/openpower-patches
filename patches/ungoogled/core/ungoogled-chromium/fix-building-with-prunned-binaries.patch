# Contains tests and features that are unneeded and would otherwise
# require binaries to be whitelisted in the pruning list

Index: chromium-126.0.6478.57/chrome/BUILD.gn
===================================================================
--- chromium-126.0.6478.57.orig/chrome/BUILD.gn
+++ chromium-126.0.6478.57/chrome/BUILD.gn
@@ -937,8 +937,6 @@ if (is_win) {
 
   bundle_data("chrome_framework_resources") {
     sources = [
-      "//ui/gl/resources/angle-metal/gpu_shader_cache.bin",
-
       # This image is used to badge the lock icon in the
       # authentication dialogs, such as those used for installation
       # from disk image and Keystone promotion (if so enabled).  It
Index: chromium-126.0.6478.57/chrome/browser/BUILD.gn
===================================================================
--- chromium-126.0.6478.57.orig/chrome/browser/BUILD.gn
+++ chromium-126.0.6478.57/chrome/browser/BUILD.gn
@@ -850,10 +850,6 @@ static_library("browser") {
     "navigation_predictor/navigation_predictor_metrics_document_data.h",
     "navigation_predictor/navigation_predictor_preconnect_client.cc",
     "navigation_predictor/navigation_predictor_preconnect_client.h",
-    "navigation_predictor/preloading_model_keyed_service.cc",
-    "navigation_predictor/preloading_model_keyed_service.h",
-    "navigation_predictor/preloading_model_keyed_service_factory.cc",
-    "navigation_predictor/preloading_model_keyed_service_factory.h",
     "navigation_predictor/search_engine_preconnector.cc",
     "navigation_predictor/search_engine_preconnector.h",
     "net/chrome_mojo_proxy_resolver_factory.cc",
@@ -972,10 +968,6 @@ static_library("browser") {
     "optimization_guide/chrome_prediction_model_store.h",
     "optimization_guide/model_execution/chrome_on_device_model_service_controller.cc",
     "optimization_guide/model_execution/chrome_on_device_model_service_controller.h",
-    "optimization_guide/model_validator_keyed_service.cc",
-    "optimization_guide/model_validator_keyed_service.h",
-    "optimization_guide/model_validator_keyed_service_factory.cc",
-    "optimization_guide/model_validator_keyed_service_factory.h",
     "optimization_guide/optimization_guide_internals_ui.cc",
     "optimization_guide/optimization_guide_internals_ui.h",
     "optimization_guide/optimization_guide_keyed_service.cc",
Index: chromium-126.0.6478.57/chrome/browser/navigation_predictor/navigation_predictor.cc
===================================================================
--- chromium-126.0.6478.57.orig/chrome/browser/navigation_predictor/navigation_predictor.cc
+++ chromium-126.0.6478.57/chrome/browser/navigation_predictor/navigation_predictor.cc
@@ -18,8 +18,6 @@
 #include "base/time/default_tick_clock.h"
 #include "chrome/browser/navigation_predictor/navigation_predictor_keyed_service.h"
 #include "chrome/browser/navigation_predictor/navigation_predictor_keyed_service_factory.h"
-#include "chrome/browser/navigation_predictor/preloading_model_keyed_service.h"
-#include "chrome/browser/navigation_predictor/preloading_model_keyed_service_factory.h"
 #include "chrome/browser/preloading/preloading_prefs.h"
 #include "chrome/browser/profiles/profile.h"
 #include "components/no_state_prefetch/browser/no_state_prefetch_manager.h"
@@ -94,11 +92,6 @@ base::TimeDelta MLModelExecutionTimerSta
   return base::Milliseconds(timer_start_delay);
 }
 
-base::TimeDelta MLModelExecutionTimerInterval() {
-  static int timer_interval =
-      blink::features::kPreloadingModelTimerInterval.Get();
-  return base::Milliseconds(timer_interval);
-}
 
 bool MLModelOneExecutionPerHover() {
   static bool one_execution_per_hover =
@@ -369,80 +362,6 @@ void NavigationPredictor::ProcessPointer
 }
 
 void NavigationPredictor::OnMLModelExecutionTimerFired() {
-  // Check whether preloading is enabled or not.
-  Profile* profile =
-      Profile::FromBrowserContext(render_frame_host().GetBrowserContext());
-  if (prefetch::IsSomePreloadingEnabled(*profile->GetPrefs()) !=
-      content::PreloadingEligibility::kEligible) {
-    return;
-  }
-
-  // Execute the model.
-  PreloadingModelKeyedService* model_service =
-      PreloadingModelKeyedServiceFactory::GetForProfile(profile);
-  if (!model_service) {
-    return;
-  }
-
-  if (!ml_model_candidate_.has_value()) {
-    return;
-  }
-  auto it = anchors_.find(ml_model_candidate_.value());
-  if (it == anchors_.end()) {
-    return;
-  }
-
-  AnchorElementData& anchor = it->second;
-
-  PreloadingModelKeyedService::Inputs inputs;
-  inputs.contains_image = anchor.contains_image;
-  inputs.font_size = anchor.font_size;
-  inputs.has_text_sibling = anchor.has_text_sibling;
-  inputs.is_bold = anchor.is_bold_font;
-  inputs.is_in_iframe = anchor.is_in_iframe;
-  inputs.is_url_incremented_by_one = anchor.is_url_incremented_by_one;
-  inputs.navigation_start_to_link_logged =
-      anchor.first_report_timestamp - navigation_start_;
-  auto path_info = GetUrlPathLengthDepthAndHash(anchor.target_url);
-  inputs.path_length = path_info.path_length;
-  inputs.path_depth = path_info.path_depth;
-  inputs.percent_clickable_area = anchor.ratio_area;
-  inputs.percent_vertical_distance =
-      static_cast<int>(anchor.ratio_distance_root_top * 100);
-
-  inputs.is_same_host = anchor.is_same_host;
-  auto to_timedelta = [this](std::optional<base::TimeTicks> ts) {
-    return ts.has_value() ? NowTicks() - ts.value() : base::TimeDelta();
-  };
-  // TODO(329691634): Using the real viewport entry time for
-  // `entered_viewport_to_left_viewport` produces low quality results.
-  // We could remove it from the model, if we can't get this to be useful.
-  inputs.entered_viewport_to_left_viewport = base::TimeDelta();
-  inputs.hover_dwell_time = to_timedelta(anchor.pointer_over_timestamp);
-  inputs.pointer_hovering_over_count = anchor.pointer_hovering_over_count;
-  if (model_score_callback_) {
-    std::move(model_score_callback_).Run(inputs);
-  }
-  model_service->Score(
-      &scoring_model_task_tracker_, inputs,
-      base::BindOnce(&NavigationPredictor::OnPreloadingHeuristicsModelDone,
-                     weak_ptr_factory_.GetWeakPtr(), anchor.target_url));
-
-  // TODO(crbug.com/40278151): In its current form, the model does not seem to
-  // ever increase in confidence when dwelling on an anchor, which makes
-  // repeated executions wasteful. So we only do one execution per mouse over.
-  // As we iterate on the model, multiple executions may become useful, but we
-  // need to take care to not produce a large amount of redundant predictions
-  // (as seen in crbug.com/338200075 ). Other ideas here could be to only report
-  // when the score differs from the previous execution and/or to have a fixed
-  // limit on the number of executions while dwelling.
-  if (!MLModelOneExecutionPerHover() &&
-      !ml_model_execution_timer_.IsRunning()) {
-    ml_model_execution_timer_.Start(
-        FROM_HERE, MLModelExecutionTimerInterval(),
-        base::BindOnce(&NavigationPredictor::OnMLModelExecutionTimerFired,
-                       base::Unretained(this)));
-  }
 }
 
 void NavigationPredictor::SetModelScoreCallbackForTesting(
Index: chromium-126.0.6478.57/chrome/browser/profiles/chrome_browser_main_extra_parts_profiles.cc
===================================================================
--- chromium-126.0.6478.57.orig/chrome/browser/profiles/chrome_browser_main_extra_parts_profiles.cc
+++ chromium-126.0.6478.57/chrome/browser/profiles/chrome_browser_main_extra_parts_profiles.cc
@@ -92,7 +92,6 @@
 #include "chrome/browser/media_galleries/media_galleries_preferences_factory.h"
 #include "chrome/browser/metrics/variations/google_groups_updater_service_factory.h"
 #include "chrome/browser/navigation_predictor/navigation_predictor_keyed_service_factory.h"
-#include "chrome/browser/navigation_predictor/preloading_model_keyed_service_factory.h"
 #include "chrome/browser/net/dns_probe_service_factory.h"
 #include "chrome/browser/net/profile_network_context_service_factory.h"
 #include "chrome/browser/notifications/metrics/notification_metrics_logger_factory.h"
@@ -939,7 +938,6 @@ void ChromeBrowserMainExtraPartsProfiles
 #endif
   ModelTypeStoreServiceFactory::GetInstance();
   NavigationPredictorKeyedServiceFactory::GetInstance();
-  PreloadingModelKeyedServiceFactory::GetInstance();
 #if BUILDFLAG(IS_CHROMEOS_ASH)
   NearbySharingServiceFactory::GetInstance();
   if (base::FeatureList::IsEnabled(ash::features::kNearbyPresence)) {
@@ -984,9 +982,6 @@ void ChromeBrowserMainExtraPartsProfiles
   OneTimePermissionsTrackerFactory::GetInstance();
 #endif
   OpenerHeuristicServiceFactory::GetInstance();
-  if (optimization_guide::ShouldStartModelValidator()) {
-    optimization_guide::ModelValidatorKeyedServiceFactory::GetInstance();
-  }
   OptimizationGuideKeyedServiceFactory::GetInstance();
   OriginKeyedPermissionActionServiceFactory::GetInstance();
   OriginTrialsFactory::GetInstance();
Index: chromium-126.0.6478.57/chrome/browser/profiles/profile_manager.cc
===================================================================
--- chromium-126.0.6478.57.orig/chrome/browser/profiles/profile_manager.cc
+++ chromium-126.0.6478.57/chrome/browser/profiles/profile_manager.cc
@@ -48,7 +48,6 @@
 #include "chrome/browser/extensions/chrome_content_browser_client_extensions_part.h"
 #include "chrome/browser/lifetime/application_lifetime.h"
 #include "chrome/browser/navigation_predictor/navigation_predictor_keyed_service_factory.h"
-#include "chrome/browser/navigation_predictor/preloading_model_keyed_service_factory.h"
 #include "chrome/browser/permissions/adaptive_quiet_notification_permission_ui_enabler.h"
 #include "chrome/browser/prefs/incognito_mode_prefs.h"
 #include "chrome/browser/profiles/delete_profile_helper.h"
@@ -1542,9 +1541,6 @@ void ProfileManager::DoFinalInitForServi
   // Ensure NavigationPredictorKeyedService is started.
   NavigationPredictorKeyedServiceFactory::GetForProfile(profile);
 
-  // Ensure PreloadingModelKeyedService is started.
-  PreloadingModelKeyedServiceFactory::GetForProfile(profile);
-
   IdentityManagerFactory::GetForProfile(profile)->OnNetworkInitialized();
   AccountReconcilorFactory::GetForProfile(profile);
 
Index: chromium-126.0.6478.57/chrome/browser/resources/settings/a11y_page/a11y_page.ts
===================================================================
--- chromium-126.0.6478.57.orig/chrome/browser/resources/settings/a11y_page/a11y_page.ts
+++ chromium-126.0.6478.57/chrome/browser/resources/settings/a11y_page/a11y_page.ts
@@ -231,7 +231,7 @@ export class SettingsA11yPageElement ext
    * page; i.e. Settings > Accessibility > Text-to-Speech.
    */
   private computeShowPdfOcrToggle_(): boolean {
-    return loadTimeData.getBoolean('pdfOcrEnabled') && this.hasScreenReader_;
+    return false;
   }
   // </if>
 
Index: chromium-126.0.6478.57/chrome/browser/ui/webui/settings/accessibility_main_handler.cc
===================================================================
--- chromium-126.0.6478.57.orig/chrome/browser/ui/webui/settings/accessibility_main_handler.cc
+++ chromium-126.0.6478.57/chrome/browser/ui/webui/settings/accessibility_main_handler.cc
@@ -39,13 +39,6 @@ void AccessibilityMainHandler::RegisterM
       base::BindRepeating(
           &AccessibilityMainHandler::HandleCheckAccessibilityImageLabels,
           base::Unretained(this)));
-#if BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
-  web_ui()->RegisterMessageCallback(
-      "getScreenAiInstallState",
-      base::BindRepeating(
-          &AccessibilityMainHandler::HandleGetScreenAIInstallState,
-          base::Unretained(this)));
-#endif  // BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
 }
 
 void AccessibilityMainHandler::OnJavascriptAllowed() {
@@ -56,13 +49,6 @@ void AccessibilityMainHandler::OnJavascr
           base::Unretained(this)));
 #endif  // BUILDFLAG(IS_CHROMEOS_ASH)
 
-#if BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
-  if (features::IsPdfOcrEnabled()) {
-    CHECK(!component_ready_observer_.IsObserving());
-    component_ready_observer_.Observe(
-        screen_ai::ScreenAIInstallState::GetInstance());
-  }
-#endif  // BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
 }
 
 void AccessibilityMainHandler::OnJavascriptDisallowed() {
@@ -70,40 +56,7 @@ void AccessibilityMainHandler::OnJavascr
   accessibility_subscription_ = {};
 #endif  // BUILDFLAG(IS_CHROMEOS_ASH)
 
-#if BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
-  if (features::IsPdfOcrEnabled()) {
-    component_ready_observer_.Reset();
-  }
-#endif  // BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
-}
-
-#if BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
-void AccessibilityMainHandler::DownloadProgressChanged(double progress) {
-  CHECK_GE(progress, 0.0);
-  CHECK_LE(progress, 1.0);
-  const int progress_num = progress * 100;
-  FireWebUIListener("pdf-ocr-downloading-progress-changed",
-                    base::Value(progress_num));
-}
-
-void AccessibilityMainHandler::StateChanged(
-    screen_ai::ScreenAIInstallState::State state) {
-  base::Value state_value = base::Value(static_cast<int>(state));
-  FireWebUIListener("pdf-ocr-state-changed", state_value);
-}
-
-void AccessibilityMainHandler::HandleGetScreenAIInstallState(
-    const base::Value::List& args) {
-  CHECK_EQ(1U, args.size());
-  const base::Value& callback_id = args[0];
-  AllowJavascript();
-  // Get the current install state and send it back to a UI callback.
-  screen_ai::ScreenAIInstallState::State current_install_state =
-      screen_ai::ScreenAIInstallState::GetInstance()->get_state();
-  ResolveJavascriptCallback(
-      callback_id, base::Value(static_cast<int>(current_install_state)));
 }
-#endif  // BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
 
 void AccessibilityMainHandler::HandleGetScreenReaderState(
     const base::Value::List& args) {
Index: chromium-126.0.6478.57/chrome/browser/ui/webui/settings/accessibility_main_handler.h
===================================================================
--- chromium-126.0.6478.57.orig/chrome/browser/ui/webui/settings/accessibility_main_handler.h
+++ chromium-126.0.6478.57/chrome/browser/ui/webui/settings/accessibility_main_handler.h
@@ -13,10 +13,6 @@
 #include "chrome/browser/ash/accessibility/accessibility_manager.h"
 #endif  // BUILDFLAG(IS_CHROMEOS_ASH)
 
-#if BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
-#include "base/scoped_observation.h"
-#include "chrome/browser/screen_ai/screen_ai_install_state.h"
-#endif  // BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
 
 namespace settings {
 
@@ -24,10 +20,6 @@ namespace settings {
 // chrome://settings/accessibility.
 class AccessibilityMainHandler
     : public ::settings::SettingsPageUIHandler
-#if BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
-    ,
-      public screen_ai::ScreenAIInstallState::Observer
-#endif  // BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
 {
  public:
   AccessibilityMainHandler();
@@ -40,11 +32,6 @@ class AccessibilityMainHandler
   void OnJavascriptAllowed() override;
   void OnJavascriptDisallowed() override;
 
-#if BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
-  // screen_ai::ScreenAIInstallState::Observer:
-  void DownloadProgressChanged(double progress) override;
-  void StateChanged(screen_ai::ScreenAIInstallState::State state) override;
-#endif  // BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
 
  private:
   void HandleGetScreenReaderState(const base::Value::List& args);
@@ -63,11 +50,6 @@ class AccessibilityMainHandler
   base::CallbackListSubscription accessibility_subscription_;
 #endif  // BUILDFLAG(IS_CHROMEOS_ASH)
 
-#if BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
-  base::ScopedObservation<screen_ai::ScreenAIInstallState,
-                          screen_ai::ScreenAIInstallState::Observer>
-      component_ready_observer_{this};
-#endif  // BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_MAC)
 };
 
 }  // namespace settings
Index: chromium-126.0.6478.57/chrome/browser/ui/webui/side_panel/read_anything/read_anything_untrusted_page_handler.cc
===================================================================
--- chromium-126.0.6478.57.orig/chrome/browser/ui/webui/side_panel/read_anything/read_anything_untrusted_page_handler.cc
+++ chromium-126.0.6478.57/chrome/browser/ui/webui/side_panel/read_anything/read_anything_untrusted_page_handler.cc
@@ -17,8 +17,6 @@
 #include "chrome/browser/accessibility/pdf_ocr_controller_factory.h"
 #include "chrome/browser/browser_features.h"
 #include "chrome/browser/profiles/profile.h"
-#include "chrome/browser/screen_ai/screen_ai_service_router.h"
-#include "chrome/browser/screen_ai/screen_ai_service_router_factory.h"
 #include "chrome/browser/translate/chrome_translate_client.h"
 #include "chrome/browser/ui/browser.h"
 #include "chrome/browser/ui/browser_finder.h"
@@ -298,21 +296,6 @@ ReadAnythingUntrustedPageHandler::ReadAn
         highlightGranularity);
   }
 
-  if (features::IsReadAnythingWithScreen2xEnabled()) {
-    screen_ai::ScreenAIServiceRouterFactory::GetForBrowserContext(
-        browser_->profile())
-        ->GetServiceStateAsync(
-            screen_ai::ScreenAIServiceRouter::Service::kMainContentExtraction,
-            base::BindOnce(
-                &ReadAnythingUntrustedPageHandler::OnScreenAIServiceInitialized,
-                weak_factory_.GetWeakPtr()));
-  }
-  if (features::IsPdfOcrEnabled()) {
-    screen_ai::ScreenAIServiceRouterFactory::GetForBrowserContext(
-        browser_->profile())
-        ->GetServiceStateAsync(screen_ai::ScreenAIServiceRouter::Service::kOCR,
-                               base::DoNothing());
-  }
 
   OnActiveWebContentsChanged();
 
@@ -716,10 +699,6 @@ void ReadAnythingUntrustedPageHandler::S
           inner_contents[0]->GetPrimaryMainFrame()->GetLastCommittedOrigin())) {
     pdf_observer_ = std::make_unique<ReadAnythingWebContentsObserver>(
         weak_factory_.GetSafeRef(), inner_contents[0], kReadAnythingAXMode);
-    if (features::IsPdfOcrEnabled()) {
-      screen_ai::PdfOcrControllerFactory::GetForProfile(browser_->profile())
-          ->Activate();
-    }
   }
 }
 
Index: chromium-126.0.6478.57/chrome/renderer/BUILD.gn
===================================================================
--- chromium-126.0.6478.57.orig/chrome/renderer/BUILD.gn
+++ chromium-126.0.6478.57/chrome/renderer/BUILD.gn
@@ -423,10 +423,6 @@ static_library("renderer") {
     sources += [
       "accessibility/ax_tree_distiller.cc",
       "accessibility/ax_tree_distiller.h",
-      "accessibility/read_anything_app_controller.cc",
-      "accessibility/read_anything_app_controller.h",
-      "accessibility/read_anything_app_model.cc",
-      "accessibility/read_anything_app_model.h",
       "media/chrome_speech_recognition_client.cc",
       "media/chrome_speech_recognition_client.h",
       "searchbox/searchbox.cc",
Index: chromium-126.0.6478.57/chrome/renderer/chrome_render_frame_observer.cc
===================================================================
--- chromium-126.0.6478.57.orig/chrome/renderer/chrome_render_frame_observer.cc
+++ chromium-126.0.6478.57/chrome/renderer/chrome_render_frame_observer.cc
@@ -320,22 +320,6 @@ void ChromeRenderFrameObserver::DidCommi
 }
 
 void ChromeRenderFrameObserver::DidClearWindowObject() {
-#if !BUILDFLAG(IS_ANDROID)
-  const base::CommandLine& command_line =
-      *base::CommandLine::ForCurrentProcess();
-  if (command_line.HasSwitch(switches::kInstantProcess))
-    SearchBoxExtension::Install(render_frame()->GetWebFrame());
-
-  // Install ReadAnythingAppController on render frames with the Read Anything
-  // url, which is chrome-untrusted. ReadAnythingAppController installs v8
-  // bindings in the chrome.readingMode namespace which are consumed by
-  // read_anything/app.ts, the resource of the Read Anything WebUI.
-  if (features::IsReadAnythingEnabled() &&
-      render_frame()->GetWebFrame()->GetDocument().Url() ==
-          chrome::kChromeUIUntrustedReadAnythingSidePanelURL) {
-    ReadAnythingAppController::Install(render_frame());
-  }
-#endif  // !BUILDFLAG(IS_ANDROID)
 }
 
 void ChromeRenderFrameObserver::DidMeaningfulLayout(
Index: chromium-126.0.6478.57/chrome/test/chromedriver/BUILD.gn
===================================================================
--- chromium-126.0.6478.57.orig/chrome/test/chromedriver/BUILD.gn
+++ chromium-126.0.6478.57/chrome/test/chromedriver/BUILD.gn
@@ -405,7 +405,7 @@ source_set("lib") {
   }
 }
 
-if (is_linux) {
+if (false) {
   # Linux
   executable("chromedriver_server.unstripped") {
     testonly = true
Index: chromium-126.0.6478.57/components/omnibox/browser/autocomplete_classifier.cc
===================================================================
--- chromium-126.0.6478.57.orig/components/omnibox/browser/autocomplete_classifier.cc
+++ chromium-126.0.6478.57/components/omnibox/browser/autocomplete_classifier.cc
@@ -103,8 +103,6 @@ void AutocompleteClassifier::Classify(
     metrics::OmniboxEventProto::PageClassification page_classification,
     AutocompleteMatch* match,
     GURL* alternate_nav_url) {
-  TRACE_EVENT1("omnibox", "AutocompleteClassifier::Classify", "text",
-               base::UTF16ToUTF8(text));
   DCHECK(!inside_classify_);
   base::AutoReset<bool> reset(&inside_classify_, true);
   AutocompleteInput input(text, page_classification, *scheme_classifier_);
Index: chromium-126.0.6478.57/content/shell/BUILD.gn
===================================================================
--- chromium-126.0.6478.57.orig/content/shell/BUILD.gn
+++ chromium-126.0.6478.57/content/shell/BUILD.gn
@@ -795,10 +795,6 @@ if (is_apple) {
       deps = [ "//third_party/icu:icudata" ]
     }
 
-    if (is_mac) {
-      sources += [ "//ui/gl/resources/angle-metal/gpu_shader_cache.bin" ]
-    }
-
     if (v8_use_external_startup_data) {
       public_deps += [ "//v8" ]
       if (use_v8_context_snapshot) {
Index: chromium-126.0.6478.57/services/passage_embeddings/passage_embeddings_service.cc
===================================================================
--- chromium-126.0.6478.57.orig/services/passage_embeddings/passage_embeddings_service.cc
+++ chromium-126.0.6478.57/services/passage_embeddings/passage_embeddings_service.cc
@@ -6,7 +6,6 @@
 
 #include "base/files/file.h"
 #include "components/optimization_guide/machine_learning_tflite_buildflags.h"
-#include "services/passage_embeddings/passage_embedder.h"
 
 namespace passage_embeddings {
 
Index: chromium-126.0.6478.57/services/passage_embeddings/passage_embeddings_service.h
===================================================================
--- chromium-126.0.6478.57.orig/services/passage_embeddings/passage_embeddings_service.h
+++ chromium-126.0.6478.57/services/passage_embeddings/passage_embeddings_service.h
@@ -11,7 +11,6 @@
 
 namespace passage_embeddings {
 
-class PassageEmbedder;
 
 // Class implementation of the passage embeddings service mojo interface.
 class PassageEmbeddingsService : public mojom::PassageEmbeddingsService {
Index: chromium-126.0.6478.57/services/screen_ai/buildflags/features.gni
===================================================================
--- chromium-126.0.6478.57.orig/services/screen_ai/buildflags/features.gni
+++ chromium-126.0.6478.57/services/screen_ai/buildflags/features.gni
@@ -7,14 +7,13 @@ import("//build/config/sanitizers/saniti
 
 declare_args() {
   # Screen AI service is only supported on desktop platforms.
-  enable_screen_ai_service = is_linux || is_mac || is_chromeos || is_win
+  enable_screen_ai_service = false
 
   # Screen AI library is not available for browser tests on ChromeOS. Tast tests
   # cover library's OCR functionality on ChromeOS.
   enable_screen_ai_browsertests =
-      is_linux || (is_mac && (target_cpu == "arm64" || target_cpu == "x64")) ||
-      (is_win && (target_cpu == "x64" || target_cpu == "x86"))
+      false
 
   # Screen AI library is not available for MSAN and UBSAN.
-  use_fake_screen_ai = is_msan || is_ubsan || is_ubsan_vptr || is_ubsan_security
+  use_fake_screen_ai = false
 }
Index: chromium-126.0.6478.57/third_party/devtools-frontend/src/front_end/BUILD.gn
===================================================================
--- chromium-126.0.6478.57.orig/third_party/devtools-frontend/src/front_end/BUILD.gn
+++ chromium-126.0.6478.57/third_party/devtools-frontend/src/front_end/BUILD.gn
@@ -184,7 +184,6 @@ group("unittests") {
     "panels/sources/components:unittests",
     "panels/timeline:unittests",
     "panels/timeline/components:unittests",
-    "panels/timeline/fixtures/traces",
     "panels/timeline/track_appenders:unittests",
     "panels/utils:unittests",
     "panels/web_audio:unittests",
