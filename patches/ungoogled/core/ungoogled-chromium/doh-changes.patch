Index: chromium-128.0.6613.113/chrome/browser/net/dns_probe_runner.cc
===================================================================
--- chromium-128.0.6613.113.orig/chrome/browser/net/dns_probe_runner.cc
+++ chromium-128.0.6613.113/chrome/browser/net/dns_probe_runner.cc
@@ -18,7 +18,7 @@
 
 namespace chrome_browser_net {
 
-const char DnsProbeRunner::kKnownGoodHostname[] = "google.com";
+const char DnsProbeRunner::kKnownGoodHostname[] = "example.com";
 
 namespace {
 
Index: chromium-128.0.6613.113/chrome/browser/net/stub_resolver_config_reader.cc
===================================================================
--- chromium-128.0.6613.113.orig/chrome/browser/net/stub_resolver_config_reader.cc
+++ chromium-128.0.6613.113/chrome/browser/net/stub_resolver_config_reader.cc
@@ -125,7 +125,7 @@ StubResolverConfigReader::StubResolverCo
                                       base::Value(ShouldEnableAsyncDns()));
     local_state_->SetDefaultPrefValue(prefs::kDnsOverHttpsMode,
                                       base::Value(SecureDnsConfig::ModeToString(
-                                          net::SecureDnsMode::kAutomatic)));
+                                          net::SecureDnsMode::kOff)));
   }
 
   pref_change_registrar_.Add(prefs::kBuiltInDnsClientEnabled, pref_callback);
Index: chromium-128.0.6613.113/net/dns/public/doh_provider_entry.cc
===================================================================
--- chromium-128.0.6613.113.orig/net/dns/public/doh_provider_entry.cc
+++ chromium-128.0.6613.113/net/dns/public/doh_provider_entry.cc
@@ -166,30 +166,6 @@ const DohProviderEntry::List& DohProvide
           /*display_globally=*/false, /*display_countries=*/{"EE", "DE"},
           LoggingLevel::kNormal),
       new DohProviderEntry(
-          "Google",
-          MAKE_BASE_FEATURE_WITH_STATIC_STORAGE(
-              DohProviderGoogle, base::FEATURE_ENABLED_BY_DEFAULT),
-          {"8.8.8.8", "8.8.4.4", "2001:4860:4860::8888",
-           "2001:4860:4860::8844"},
-          /*dns_over_tls_hostnames=*/
-          {"dns.google", "dns.google.com", "8888.google"},
-          "https://dns.google/dns-query{?dns}",
-          /*ui_name=*/"Google (Public DNS)",
-          "https://developers.google.com/speed/public-dns/"
-          /*privacy_policy=*/"privacy",
-          /*display_globally=*/true, /*display_countries=*/{},
-          LoggingLevel::kExtra),
-      new DohProviderEntry(
-          "GoogleDns64",
-          MAKE_BASE_FEATURE_WITH_STATIC_STORAGE(
-              DohProviderGoogleDns64, base::FEATURE_ENABLED_BY_DEFAULT),
-          {"2001:4860:4860::64", "2001:4860:4860::6464"},
-          /*dns_over_tls_hostnames=*/{"dns64.dns.google"},
-          "https://dns64.dns.google/dns-query{?dns}",
-          /*ui_name=*/"", /*privacy_policy=*/"",
-          /*display_globally=*/false,
-          /*display_countries=*/{}, LoggingLevel::kNormal),
-      new DohProviderEntry(
           "Iij",
           MAKE_BASE_FEATURE_WITH_STATIC_STORAGE(
               DohProviderIij, base::FEATURE_ENABLED_BY_DEFAULT),
Index: chromium-128.0.6613.113/services/network/public/cpp/features.cc
===================================================================
--- chromium-128.0.6613.113.orig/services/network/public/cpp/features.cc
+++ chromium-128.0.6613.113/services/network/public/cpp/features.cc
@@ -126,12 +126,7 @@ BASE_FEATURE(kSplitAuthCacheByNetworkIso
 // Enable usage of hardcoded DoH upgrade mapping for use in automatic mode.
 BASE_FEATURE(kDnsOverHttpsUpgrade,
              "DnsOverHttpsUpgrade",
-#if BUILDFLAG(IS_WIN) || BUILDFLAG(IS_CHROMEOS) || BUILDFLAG(IS_MAC) || \
-    BUILDFLAG(IS_ANDROID) || BUILDFLAG(IS_LINUX)
-             base::FEATURE_ENABLED_BY_DEFAULT
-#else
              base::FEATURE_DISABLED_BY_DEFAULT
-#endif
 );
 
 // When enabled, the requests in a third party context to domains included in
